import { Card } from "../ui/card";
import { Button } from "../ui/button";
import { CheckCircle2, LucideIcon } from "lucide-react";

interface VulnerabilityCardProps {
  id: number;
  title: string;
  description: string;
  severity: 'high' | 'medium' | 'low';
  icon: LucideIcon;
  isCompleted: boolean;
  progress?: number;
  onAction: () => void;
  actionLabel?: string;
}

export function VulnerabilityCard({
  id,
  title,
  description,
  severity,
  icon: Icon,
  isCompleted,
  progress = 0,
  onAction,
  actionLabel = 'Learn',
}: VulnerabilityCardProps) {
  const getSeverityConfig = (sev: string) => {
    switch (sev.toLowerCase()) {
      case 'high':
        return {
          bg: '#B50909',
          text: '#FFFFFF',
          label: 'High',
          emoji: 'ðŸ”´',
        };
      case 'medium':
        return {
          bg: '#FBBF24',
          text: '#000000',
          label: 'Medium',
          emoji: 'ðŸŸ¡',
        };
      case 'low':
        return {
          bg: '#2E8540',
          text: '#FFFFFF',
          label: 'Easy',
          emoji: 'ðŸŸ¢',
        };
      default:
        return {
          bg: '#5A5A5A',
          text: '#FFFFFF',
          label: sev,
          emoji: '',
        };
    }
  };

  const severityConfig = getSeverityConfig(severity);

  return (
    <Card
      className="relative overflow-hidden flex flex-col transition-all duration-300 bg-card border-[1.5px]"
      style={{
        borderColor: 'var(--border, #D9E1E2)',
        borderRadius: '12px',
        padding: '1.25rem 1rem',
        boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.05)',
        height: '100%',
        minHeight: '320px',
        transform: 'translateY(0)',
      }}
      onMouseEnter={(e) => {
        e.currentTarget.style.transform = 'translateY(-4px)';
        e.currentTarget.style.boxShadow = '0px 6px 14px rgba(0, 0, 0, 0.08)';
        e.currentTarget.style.borderColor = '#2E8540';
      }}
      onMouseLeave={(e) => {
        e.currentTarget.style.transform = 'translateY(0)';
        e.currentTarget.style.boxShadow = '0px 4px 10px rgba(0, 0, 0, 0.05)';
        e.currentTarget.style.borderColor = 'var(--border, #D9E1E2)';
      }}
    >
      {/* Card Header - Top Section with Badges */}
      <div className="flex items-start justify-between mb-3">
        {/* Left side: Icon + Badges */}
        <div className="flex items-center gap-2 flex-1 min-w-0">
          {/* Icon Container */}
          <div
            className="flex-shrink-0 w-10 h-10 rounded-lg flex items-center justify-center"
            style={{
              backgroundColor: '#E6F4EA',
            }}
          >
            <Icon
              className="w-5 h-5"
              style={{ color: '#2E8540' }}
            />
          </div>

          {/* Module Tag */}
          <span
            className="text-xs px-2 py-1 rounded-md flex-shrink-0"
            style={{
              backgroundColor: '#F3F4F6',
              color: '#162E51',
              fontFamily: 'Public Sans, sans-serif',
              fontWeight: 600,
            }}
          >
            LLM{String(id).padStart(2, '0')}
          </span>

          {/* Risk Badge */}
          <span
            className="text-xs px-2 py-1 rounded-md flex-shrink-0"
            style={{
              backgroundColor: severityConfig.bg,
              color: severityConfig.text,
              fontFamily: 'Public Sans, sans-serif',
              fontWeight: 600,
            }}
          >
            {severityConfig.emoji} {severityConfig.label}
          </span>
        </div>

        {/* Right side: Completed Badge */}
        {isCompleted && (
          <div
            className="flex-shrink-0 ml-2"
            style={{
              animation: 'slideInFromRight 0.5s ease-out',
            }}
          >
            <div
              className="flex items-center gap-1 px-2.5 py-1 rounded-lg"
              style={{
                backgroundColor: '#2E8540',
                color: '#FFFFFF',
                fontFamily: 'Public Sans, sans-serif',
                fontWeight: 700,
                fontSize: '0.75rem',
              }}
            >
              <CheckCircle2 className="w-3.5 h-3.5" />
              <span>Completed</span>
            </div>
          </div>
        )}
      </div>

      {/* Main Card Body - Title */}
      <h3
        className="mb-2 line-clamp-2 text-foreground"
        style={{
          fontFamily: 'Public Sans, sans-serif',
          fontWeight: 700,
          fontSize: '1.1rem',
          lineHeight: '1.3',
          letterSpacing: '-0.01em',
        }}
      >
        {title}
      </h3>

      {/* Description */}
      <p
        className="text-sm mb-4 line-clamp-3 flex-1 text-muted-foreground"
        style={{
          fontFamily: 'Source Sans Pro, sans-serif',
          fontSize: '0.9rem',
          lineHeight: '1.5',
        }}
      >
        {description}
      </p>

      {/* Progress Section */}
      <div className="mb-4">
        <div className="flex items-center justify-between mb-1.5">
          <span
            className="text-xs uppercase tracking-wide"
            style={{
              color: '#6B7280',
              fontFamily: 'Public Sans, sans-serif',
              fontWeight: 600,
              fontSize: '0.7rem',
            }}
          >
            Progress
          </span>
          <span
            className="text-xs"
            style={{
              color: '#2E8540',
              fontFamily: 'Public Sans, sans-serif',
              fontWeight: 700,
            }}
          >
            {progress}%
          </span>
        </div>
        
        {/* Progress Bar */}
        <div
          className="h-1.5 rounded-full overflow-hidden"
          style={{ backgroundColor: '#E5E7EB' }}
        >
          <div
            className="h-full transition-all duration-700 ease-out"
            style={{
              width: `${progress}%`,
              background: progress === 100 
                ? 'linear-gradient(90deg, #2E8540, #1D6A34)'
                : '#2E8540',
              animation: 'progressSlide 1s ease-out',
            }}
          />
        </div>
      </div>

      {/* Action Button - Bottom Section */}
      <Button
        onClick={onAction}
        className="w-full transition-all duration-200"
        style={{
          height: '40px',
          borderRadius: '8px',
          backgroundColor: isCompleted ? '#E6F4EA' : '#2E8540',
          color: isCompleted ? '#2E8540' : '#FFFFFF',
          border: isCompleted ? '1px solid #2E8540' : 'none',
          fontFamily: 'Public Sans, sans-serif',
          fontWeight: 600,
          fontSize: '0.9rem',
        }}
        onMouseEnter={(e) => {
          if (isCompleted) {
            e.currentTarget.style.backgroundColor = '#D1F4DD';
          } else {
            e.currentTarget.style.backgroundColor = '#1D6A34';
          }
          e.currentTarget.style.transform = 'scale(1.02)';
        }}
        onMouseLeave={(e) => {
          if (isCompleted) {
            e.currentTarget.style.backgroundColor = '#E6F4EA';
          } else {
            e.currentTarget.style.backgroundColor = '#2E8540';
          }
          e.currentTarget.style.transform = 'scale(1)';
        }}
      >
        {actionLabel}
      </Button>

      <style>{`
        @keyframes slideInFromRight {
          from {
            opacity: 0;
            transform: translateX(10px);
          }
          to {
            opacity: 1;
            transform: translateX(0);
          }
        }

        @keyframes progressSlide {
          from {
            width: 0;
          }
        }
      `}</style>
    </Card>
  );
}
